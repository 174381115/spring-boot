<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lgp.mapper.CollectMapper" >
  <resultMap id="BaseResultMap" type="com.lgp.domain.Collect" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="charset" property="charset" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="favorites_id" property="favoritesId" jdbcType="BIGINT" />
    <result column="is_delete" property="isDelete" jdbcType="VARCHAR" />
    <result column="last_modify_time" property="lastModifyTime" jdbcType="BIGINT" />
    <result column="logo_url" property="logoUrl" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.lgp.domain.Collect" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, charset, create_time, favorites_id, is_delete, last_modify_time, logo_url, remark, 
    title, type, url, user_id
  </sql>
  <sql id="Blob_Column_List" >
    description
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.lgp.domain.CollectExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from collect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lgp.domain.CollectExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from collect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from collect
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from collect
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lgp.domain.CollectExample" >
    delete from collect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lgp.domain.Collect" >
    insert into collect (id, charset, create_time, 
      favorites_id, is_delete, last_modify_time, 
      logo_url, remark, title, 
      type, url, user_id, description
      )
    values (#{id,jdbcType=BIGINT}, #{charset,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, 
      #{favoritesId,jdbcType=BIGINT}, #{isDelete,jdbcType=VARCHAR}, #{lastModifyTime,jdbcType=BIGINT}, 
      #{logoUrl,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lgp.domain.Collect" >
    insert into collect
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="charset != null" >
        charset,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="favoritesId != null" >
        favorites_id,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time,
      </if>
      <if test="logoUrl != null" >
        logo_url,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="charset != null" >
        #{charset,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="favoritesId != null" >
        #{favoritesId,jdbcType=BIGINT},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="lastModifyTime != null" >
        #{lastModifyTime,jdbcType=BIGINT},
      </if>
      <if test="logoUrl != null" >
        #{logoUrl,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lgp.domain.CollectExample" resultType="java.lang.Integer" >
    select count(*) from collect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update collect
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.charset != null" >
        charset = #{record.charset,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.favoritesId != null" >
        favorites_id = #{record.favoritesId,jdbcType=BIGINT},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=VARCHAR},
      </if>
      <if test="record.lastModifyTime != null" >
        last_modify_time = #{record.lastModifyTime,jdbcType=BIGINT},
      </if>
      <if test="record.logoUrl != null" >
        logo_url = #{record.logoUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update collect
    set id = #{record.id,jdbcType=BIGINT},
      charset = #{record.charset,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      favorites_id = #{record.favoritesId,jdbcType=BIGINT},
      is_delete = #{record.isDelete,jdbcType=VARCHAR},
      last_modify_time = #{record.lastModifyTime,jdbcType=BIGINT},
      logo_url = #{record.logoUrl,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update collect
    set id = #{record.id,jdbcType=BIGINT},
      charset = #{record.charset,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      favorites_id = #{record.favoritesId,jdbcType=BIGINT},
      is_delete = #{record.isDelete,jdbcType=VARCHAR},
      last_modify_time = #{record.lastModifyTime,jdbcType=BIGINT},
      logo_url = #{record.logoUrl,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lgp.domain.Collect" >
    update collect
    <set >
      <if test="charset != null" >
        charset = #{charset,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="favoritesId != null" >
        favorites_id = #{favoritesId,jdbcType=BIGINT},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time = #{lastModifyTime,jdbcType=BIGINT},
      </if>
      <if test="logoUrl != null" >
        logo_url = #{logoUrl,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lgp.domain.Collect" >
    update collect
    set charset = #{charset,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      favorites_id = #{favoritesId,jdbcType=BIGINT},
      is_delete = #{isDelete,jdbcType=VARCHAR},
      last_modify_time = #{lastModifyTime,jdbcType=BIGINT},
      logo_url = #{logoUrl,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lgp.domain.Collect" >
    update collect
    set charset = #{charset,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      favorites_id = #{favoritesId,jdbcType=BIGINT},
      is_delete = #{isDelete,jdbcType=VARCHAR},
      last_modify_time = #{lastModifyTime,jdbcType=BIGINT},
      logo_url = #{logoUrl,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>