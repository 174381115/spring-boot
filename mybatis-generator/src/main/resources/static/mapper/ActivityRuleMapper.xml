<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lgp.drools.mapper.ActivityRuleMapper" >
  <resultMap id="BaseResultMap" type="com.lgp.drools.domain.ActivityRule" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="task_id" property="taskId" jdbcType="BIGINT" />
    <result column="event" property="event" jdbcType="VARCHAR" />
    <result column="rule_value" property="ruleValue" jdbcType="VARCHAR" />
    <result column="priority" property="priority" jdbcType="TINYINT" />
    <result column="awardee_type" property="awardeeType" jdbcType="TINYINT" />
    <result column="send_award_times" property="sendAwardTimes" jdbcType="TINYINT" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="CHAR" />
    <result column="is_sms_notice" property="isSmsNotice" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, task_id, event, rule_value, priority, awardee_type, send_award_times, create_by, 
    create_time, update_by, update_time, is_delete, is_sms_notice
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lgp.drools.domain.ActivityRuleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activity_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from activity_rule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from activity_rule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lgp.drools.domain.ActivityRuleExample" >
    delete from activity_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lgp.drools.domain.ActivityRule" >
    insert into activity_rule (id, task_id, event, 
      rule_value, priority, awardee_type, 
      send_award_times, create_by, create_time, 
      update_by, update_time, is_delete, 
      is_sms_notice)
    values (#{id,jdbcType=INTEGER}, #{taskId,jdbcType=BIGINT}, #{event,jdbcType=VARCHAR}, 
      #{ruleValue,jdbcType=VARCHAR}, #{priority,jdbcType=TINYINT}, #{awardeeType,jdbcType=TINYINT}, 
      #{sendAwardTimes,jdbcType=TINYINT}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=CHAR}, 
      #{isSmsNotice,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lgp.drools.domain.ActivityRule" >
    insert into activity_rule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="taskId != null" >
        task_id,
      </if>
      <if test="event != null" >
        event,
      </if>
      <if test="ruleValue != null" >
        rule_value,
      </if>
      <if test="priority != null" >
        priority,
      </if>
      <if test="awardeeType != null" >
        awardee_type,
      </if>
      <if test="sendAwardTimes != null" >
        send_award_times,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="isSmsNotice != null" >
        is_sms_notice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="taskId != null" >
        #{taskId,jdbcType=BIGINT},
      </if>
      <if test="event != null" >
        #{event,jdbcType=VARCHAR},
      </if>
      <if test="ruleValue != null" >
        #{ruleValue,jdbcType=VARCHAR},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=TINYINT},
      </if>
      <if test="awardeeType != null" >
        #{awardeeType,jdbcType=TINYINT},
      </if>
      <if test="sendAwardTimes != null" >
        #{sendAwardTimes,jdbcType=TINYINT},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=CHAR},
      </if>
      <if test="isSmsNotice != null" >
        #{isSmsNotice,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lgp.drools.domain.ActivityRuleExample" resultType="java.lang.Integer" >
    select count(*) from activity_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update activity_rule
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.taskId != null" >
        task_id = #{record.taskId,jdbcType=BIGINT},
      </if>
      <if test="record.event != null" >
        event = #{record.event,jdbcType=VARCHAR},
      </if>
      <if test="record.ruleValue != null" >
        rule_value = #{record.ruleValue,jdbcType=VARCHAR},
      </if>
      <if test="record.priority != null" >
        priority = #{record.priority,jdbcType=TINYINT},
      </if>
      <if test="record.awardeeType != null" >
        awardee_type = #{record.awardeeType,jdbcType=TINYINT},
      </if>
      <if test="record.sendAwardTimes != null" >
        send_award_times = #{record.sendAwardTimes,jdbcType=TINYINT},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=CHAR},
      </if>
      <if test="record.isSmsNotice != null" >
        is_sms_notice = #{record.isSmsNotice,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update activity_rule
    set id = #{record.id,jdbcType=INTEGER},
      task_id = #{record.taskId,jdbcType=BIGINT},
      event = #{record.event,jdbcType=VARCHAR},
      rule_value = #{record.ruleValue,jdbcType=VARCHAR},
      priority = #{record.priority,jdbcType=TINYINT},
      awardee_type = #{record.awardeeType,jdbcType=TINYINT},
      send_award_times = #{record.sendAwardTimes,jdbcType=TINYINT},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_delete = #{record.isDelete,jdbcType=CHAR},
      is_sms_notice = #{record.isSmsNotice,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lgp.drools.domain.ActivityRule" >
    update activity_rule
    <set >
      <if test="taskId != null" >
        task_id = #{taskId,jdbcType=BIGINT},
      </if>
      <if test="event != null" >
        event = #{event,jdbcType=VARCHAR},
      </if>
      <if test="ruleValue != null" >
        rule_value = #{ruleValue,jdbcType=VARCHAR},
      </if>
      <if test="priority != null" >
        priority = #{priority,jdbcType=TINYINT},
      </if>
      <if test="awardeeType != null" >
        awardee_type = #{awardeeType,jdbcType=TINYINT},
      </if>
      <if test="sendAwardTimes != null" >
        send_award_times = #{sendAwardTimes,jdbcType=TINYINT},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=CHAR},
      </if>
      <if test="isSmsNotice != null" >
        is_sms_notice = #{isSmsNotice,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lgp.drools.domain.ActivityRule" >
    update activity_rule
    set task_id = #{taskId,jdbcType=BIGINT},
      event = #{event,jdbcType=VARCHAR},
      rule_value = #{ruleValue,jdbcType=VARCHAR},
      priority = #{priority,jdbcType=TINYINT},
      awardee_type = #{awardeeType,jdbcType=TINYINT},
      send_award_times = #{sendAwardTimes,jdbcType=TINYINT},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=CHAR},
      is_sms_notice = #{isSmsNotice,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>